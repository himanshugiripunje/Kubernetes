 cat <<EOF | tee -a /etc/hosts
    2  master 172.31.36.36
    3  worker 172.31.33.8
    4  EOF
    5  hostnamectl set-hostname master
    6  bash
    7  apt-get update
    8  apt-get install -y apt-transport-https ca-certificates curl
    9  cat <<EOF > /etc/modules-load.d/k8s.conf
   10  overlay
   11  br_netfilter
   12  EOF
   13  modprobe overlay
   14  modprobe br_netfilter
   15  cat <<EOF > /etc/sysctl.d/k8s.conf
   16  net.bridge.bridge-nf-call-iptables  = 1
   17  net.bridge.bridge-nf-call-ip6tables = 1
   18  net.ipv4.ip_forward                 = 1
   19  EOF
   20  sysctl --system
   21  apt-get install -y containerd
   22  mkdir -p /etc/containerd
   23  containerd config default > /etc/containerd/config.toml
   24  vi /etc/containerd/config.toml
   25  sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
   26  cat /etc/containerd/config.toml | grep cgroup
   27  systemctl restart containerd
   28  systemctl status
   29  systemctl status containerd
   30  KUBE_LATEST=$(curl -L -s https://dl.k8s.io/release/stable.txt | awk 'BEGIN { FS="." } { printf "%s.%s", $1, $2 }')
   31  mkdir -p /etc/apt/keyrings
   32  curl -fsSL https://pkgs.k8s.io/core:/stable:/${KUBE_LATEST}/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
   33  echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/${KUBE_LATEST}/deb/ /" > /etc/apt/sources.list.d/kubernetes.list
   34  apt-get update
   35  apt-get install -y kubelet kubeadm kubectl
   36  apt-mark hold kubelet kubeadm kubectl
   37  kubeadm version
   38  crictl config     --set runtime-endpoint=unix:///run/containerd/containerd.sock     --set image-endpoint=unix:///run/containerd/containerd.sock
   39  crictl ps
   40  kubeadm init --control-plane-endpoint 172.31.36.36:6443 --upload-certs --pod-network-cidr=192.168.0.0/16
   41  kubeadm init --control-plane-endpoint 172.31.36.36:6443  --pod-network-cidr=192.168.0.0/16
   42  mkdir -p $HOME/.kube
   43  kubectl get no
   44  kubectl get po -A
   45  kubectl create -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
   46  kubectl get no
   47  watch kubectl get no
   48  kubectl get po -A
   49  watch kubectl get po -A
   50  kubectl delete -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
   51  rm -rfv /etc/cni/net.d/*
   52  kubectl create  -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
   53  watch kubectl get po -A
   54  kubectl describe deploy coredns -n kube-system
   55  kubectl rollout restart deploy coredns -n kube-system
   56  kubectl get po -A
   57  watchkubectl get po -A
   58  watch kubectl get po -A
   59  kubectl getpo
   60  kubectl get po
   61  kubectl get po -A
   62  kubeadm reset
   63  rm -rfv .kube/*
   64  sudo apt-get -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
   65  vim /etc/apt/sources.list
   66  apt-get update
   67  apt-get install jq
   68  curl https://docs.kasten.io/tools/k10_primer.sh  | bash /dev/stdin - s generic
   69  curl https://docs.kasten.io/tools/k10_primer.sh  | bash /dev/stdin -s generic
   70  curl https://docs.kasten.io/tools/k10_primer.sh  | bash /dev/stdin - s generic
   71  helm repo add kasten https://charts.kasten.io/
   72  helm repo ls
   73  kubectl create ns kasten-io
   74  curl https://docs.kasten.io/tools/k10_primer.sh  | bash /dev/stdin - s generic
   75  k get po -n kasten-io
   76  kubectl get po -n kasten-io
   77  alias k=kubectl
   78  k get pvc
   79  vi volume-snapshot-class.yml
   80  k apply -f volume-snapshot-class.yml
   81  k get vsclass
   82  vi volume-snapshot-class.yml
   83  cat aws_storage.yml
   84  vi volume-snapshot-class.yml
   85  k replace --force -f volume-snapshot-class.yml
   86  k get vsclass
   87  kubectl annotate volumesnapshotclass volsnapclass k10.kasten.io/is-snapshot-class=true
   88  kubectl annotate storageclass generic k10.kasten.io/volume-snapshot-class=volsnapclass
   89  curl https://docs.kasten.io/tools/k10_primer.sh  | bash /dev/stdin - s generic
   90  helm install k10 kasten/k10 --namespace=kasten-io --set global.persistence.storageClass=generic
   91  k get pvc
   92  k get pvc -n kasten-io
   93  k get po -n kasten -io
   94  k get po -n kasten-io
   95  k get svc -n kasten-io
   96  k get po -n kasten-io
   97  watch k get po -n kasten-io
   98  k get po -n kasten-io
   99  watch kubectl get po -n kasten-io
  100  k events
  101  k get pvc -n kaste-io
  102  k get pvc -n kasten-io
  103  kubectl set-context --current
  104  kubectl config set-context --current
  105  k get po
  106  kubectl config set-context --current kasten-io
  107  kubectl config set-context kasten-io --current
  108  kubectl config set-context --current --namespace kastenio
  109  kubectl config set-context --current --namespace kasten-io
  110  k get po
  111  k event
  112  k events
  113  k get no
  114  k get po -o wide
  115  k describe po gateway-bc6d6b888-rr4v2
----------------------------------------------------------------------------------------------------

kubeadm join 172.31.36.36:6443 --token 582j0e.yps85b63vkjexlne --discovery-token-ca-cert-hash sha256:6485b7de41928c0ca06c2f72ab0918b98022a54f7694b9d2012461ec75ab353f
